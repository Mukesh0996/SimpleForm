{"ast":null,"code":"import _slicedToArray from\"/Users/mukesh-8058/Desktop/SimpleForm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useReducer}from\"react\";var initalInputState={value:\"\",isTouched:false};var inputStateReducer=function inputStateReducer(state,action){if(action.type===\"INPUT\"){return{value:action.value,isTouched:state.isTouched};}if(action.type===\"BLUR\"){return{value:state.value,isTouched:true};}if(action.type===\"RESET\"){return{value:\"\",isTouched:false};}return initalInputState;};var useInput=function useInput(validate){var _useReducer=useReducer(inputStateReducer,initalInputState),_useReducer2=_slicedToArray(_useReducer,2),inputState=_useReducer2[0],dispathInputValueFn=_useReducer2[1];var valueIsValid=validate(inputState.value);var hasError=!valueIsValid&&inputState.isTouched;var valueChangeHandler=function valueChangeHandler(event){dispathInputValueFn({type:\"INPUT\",value:event.target.value});};var valueBlurHandler=function valueBlurHandler(){dispathInputValueFn({type:\"BLUR\"});};var reset=function reset(){dispathInputValueFn({type:\"RESET\"});};return{value:inputState.value,hasError:hasError,valueChangeHandler:valueChangeHandler,valueBlurHandler:valueBlurHandler,isValid:valueIsValid,reset:reset};};export default useInput;","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/SimpleForm/src/Hooks/useInput.js"],"names":["useReducer","initalInputState","value","isTouched","inputStateReducer","state","action","type","useInput","validate","inputState","dispathInputValueFn","valueIsValid","hasError","valueChangeHandler","event","target","valueBlurHandler","reset","isValid"],"mappings":"4JAAA,OAASA,UAAT,KAA2B,OAA3B,CAGA,GAAMC,CAAAA,gBAAgB,CAAG,CACrBC,KAAK,CAAE,EADc,CAErBC,SAAS,CAAE,KAFU,CAAzB,CAKA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAAQC,MAAR,CAAmB,CAEzC,GAAGA,MAAM,CAACC,IAAP,GAAgB,OAAnB,CAA4B,CACxB,MAAO,CACHL,KAAK,CAAEI,MAAM,CAACJ,KADX,CACkBC,SAAS,CAAEE,KAAK,CAACF,SADnC,CAAP,CAIH,CACD,GAAGG,MAAM,CAACC,IAAP,GAAgB,MAAnB,CAA2B,CACvB,MAAO,CACHL,KAAK,CAAEG,KAAK,CAACH,KADV,CACiBC,SAAS,CAAG,IAD7B,CAAP,CAGH,CACD,GAAGG,MAAM,CAACC,IAAP,GAAgB,OAAnB,CAA4B,CACxB,MAAO,CACHL,KAAK,CAAC,EADH,CAEHC,SAAS,CAAE,KAFR,CAAP,CAKH,CACD,MAAOF,CAAAA,gBAAP,CACH,CArBD,CAwBA,GAAMO,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,CAAc,CAE3B,gBAA0CT,UAAU,CAACI,iBAAD,CAAoBH,gBAApB,CAApD,4CAAOS,UAAP,iBAAmBC,mBAAnB,iBAEA,GAAMC,CAAAA,YAAY,CAAGH,QAAQ,CAACC,UAAU,CAACR,KAAZ,CAA7B,CACA,GAAMW,CAAAA,QAAQ,CAAI,CAACD,YAAD,EAAiBF,UAAU,CAACP,SAA9C,CAEA,GAAMW,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAW,CACpCJ,mBAAmB,CAAC,CAACJ,IAAI,CAAE,OAAP,CAAgBL,KAAK,CAAEa,KAAK,CAACC,MAAN,CAAad,KAApC,CAAD,CAAnB,CAED,CAHD,CAIA,GAAMe,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC3BN,mBAAmB,CAAC,CAACJ,IAAI,CAAC,MAAN,CAAD,CAAnB,CAEH,CAHD,CAIA,GAAMW,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CACnBP,mBAAmB,CAAC,CAACJ,IAAI,CAAC,OAAN,CAAD,CAAnB,CACA,CAFD,CAIA,MAAO,CACHL,KAAK,CAAEQ,UAAU,CAACR,KADf,CAEHW,QAAQ,CAARA,QAFG,CAGHC,kBAAkB,CAAlBA,kBAHG,CAIHG,gBAAgB,CAAhBA,gBAJG,CAKHE,OAAO,CAAEP,YALN,CAMHM,KAAK,CAALA,KANG,CAAP,CASH,CA5BD,CA8BA,cAAeV,CAAAA,QAAf","sourcesContent":["import { useReducer } from \"react\";\n\n\nconst initalInputState = {\n    value: \"\",\n    isTouched: false\n}\n\nconst inputStateReducer = (state, action) => {\n\n    if(action.type === \"INPUT\") {\n        return {\n            value: action.value, isTouched: state.isTouched\n        }\n\n    }\n    if(action.type === \"BLUR\") {\n        return {\n            value: state.value, isTouched : true\n        }\n    }\n    if(action.type === \"RESET\") {\n        return {\n            value:\"\",\n            isTouched: false\n        }\n\n    }\n    return initalInputState;\n}\n\n\nconst useInput = (validate) => {\n\n    const [inputState, dispathInputValueFn] = useReducer(inputStateReducer, initalInputState)\n    \n    const valueIsValid = validate(inputState.value);\n    const hasError =  !valueIsValid && inputState.isTouched;\n\n    const valueChangeHandler = (event) => {\n      dispathInputValueFn({type: \"INPUT\", value: event.target.value})\n      \n    }\n    const valueBlurHandler = () => {\n        dispathInputValueFn({type:\"BLUR\"})\n       \n    }\n    const reset = () => {\n     dispathInputValueFn({type:\"RESET\"})\n    }\n\n    return {\n        value: inputState.value,\n        hasError,\n        valueChangeHandler,\n        valueBlurHandler,\n        isValid: valueIsValid,\n        reset\n    }\n\n}\n\nexport default useInput;"]},"metadata":{},"sourceType":"module"}