{"ast":null,"code":"var _jsxFileName = \"/Users/mukesh-8058/Desktop/01-starting-project 3/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = () => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredNameTouched, setenteredNameTouched] = useState(false);\n  const [enteredEmailTouched, setenteredEmailTouched] = useState(false);\n  const enteredNameisValid = enteredName.trim() !== '';\n  const enteredEmailisValid = enteredEmail.includes('@');\n  const nameInputIsInvalid = !enteredNameisValid && enteredNameTouched; // const emailInputIsInvalid = !enteredEmailisValid && \n\n  let formIsValid = false;\n\n  if (enteredNameisValid) {\n    formIsValid = true;\n  }\n\n  const nameChangehandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const emailChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    setenteredNameTouched(true);\n\n    if (!enteredNameisValid) {\n      return;\n    }\n\n    setEnteredName('');\n    setenteredNameTouched(false);\n  };\n\n  const nameInputBlurHandler = () => {\n    setenteredNameTouched(true);\n  };\n\n  const emailInputBlurHandler = () => {\n    setenteredEmailTouched(true);\n  };\n\n  let InputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: InputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangehandler,\n        value: enteredName,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-text\",\n          children: \"Name should not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 39\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: InputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: enteredEmail,\n        onChange: emailChangeHandler,\n        onBlur: emailInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-text\",\n          children: \"Email should not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 39\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"mYlmg7/E1HfNlH5BttX4ztXknYc=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/01-starting-project 3/src/components/SimpleInput.js"],"names":["useState","SimpleInput","enteredName","setEnteredName","enteredEmail","setEnteredEmail","enteredNameTouched","setenteredNameTouched","enteredEmailTouched","setenteredEmailTouched","enteredNameisValid","trim","enteredEmailisValid","includes","nameInputIsInvalid","formIsValid","nameChangehandler","event","target","value","emailChangeHandler","submitHandler","preventDefault","nameInputBlurHandler","emailInputBlurHandler","InputClasses"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAExB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCH,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACM,kBAAD,EAAqBC,qBAArB,IAA8CP,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACQ,mBAAD,EAAsBC,sBAAtB,IAAgDT,QAAQ,CAAC,KAAD,CAA9D;AAEA,QAAMU,kBAAkB,GAAGR,WAAW,CAACS,IAAZ,OAAuB,EAAlD;AACA,QAAMC,mBAAmB,GAAGR,YAAY,CAACS,QAAb,CAAsB,GAAtB,CAA5B;AAEA,QAAMC,kBAAkB,GAAG,CAACJ,kBAAD,IAAuBJ,kBAAlD,CAVwB,CAWxB;;AAEA,MAAIS,WAAW,GAAG,KAAlB;;AACA,MAAGL,kBAAH,EAAuB;AACrBK,IAAAA,WAAW,GAAG,IAAd;AACD;;AAED,QAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnCd,IAAAA,cAAc,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAGA,QAAMC,kBAAkB,GAAIH,KAAD,IAAW;AACpCZ,IAAAA,eAAe,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GAFD;;AAIA,QAAME,aAAa,GAAIJ,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACK,cAAN;AACAf,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AACA,QAAG,CAACG,kBAAJ,EAAwB;AACtB;AACD;;AACDP,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAI,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD,GARD;;AAUA,QAAMgB,oBAAoB,GAAG,MAAM;AACjChB,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,GAFD;;AAIA,QAAMiB,qBAAqB,GAAG,MAAM;AAClCf,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACD,GAFD;;AAIA,MAAIgB,YAAY,GAAIX,kBAAkB,GAAG,sBAAH,GAA2B,cAAjE;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEO,aAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEI,YAAhB;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,QAAQ,EAAET,iBAAvC;AAA0D,QAAA,KAAK,EAAEd,WAAjE;AAA8E,QAAA,MAAM,EAAEqB;AAAtF;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGKT,kBAAkB,iBAAI;AAAA,gCAAK;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAL;AAAA;AAAA;AAAA;AAAA;AAAA,cAH3B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAEW,YAAhB;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,EAAE,EAAC,OAAvB;AAA+B,QAAA,KAAK,EAAErB,YAAtC;AAAoD,QAAA,QAAQ,EAAEgB,kBAA9D;AAAkF,QAAA,MAAM,EAAEI;AAA1F;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGKV,kBAAkB,iBAAI;AAAA,gCAAK;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAL;AAAA;AAAA;AAAA;AAAA;AAAA,cAH3B;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAWE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACI;AAAQ,QAAA,QAAQ,EAAE,CAACC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA9DD;;GAAMd,W;;KAAAA,W;AAgEN,eAAeA,WAAf","sourcesContent":["import { useState } from \"react\";\n\nconst SimpleInput = () => {\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredNameTouched, setenteredNameTouched] = useState(false);\n  const [enteredEmailTouched, setenteredEmailTouched] = useState(false);\n\n  const enteredNameisValid = enteredName.trim() !== '';\n  const enteredEmailisValid = enteredEmail.includes('@');\n\n  const nameInputIsInvalid = !enteredNameisValid && enteredNameTouched;\n  // const emailInputIsInvalid = !enteredEmailisValid && \n\n  let formIsValid = false;\n  if(enteredNameisValid) {\n    formIsValid = true;\n  }\n\n  const nameChangehandler = (event) => {\n    setEnteredName(event.target.value)\n  }\n  const emailChangeHandler = (event) => {\n    setEnteredEmail(event.target.value)\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    setenteredNameTouched(true);\n    if(!enteredNameisValid) {\n      return;\n    }\n    setEnteredName('');\n    setenteredNameTouched(false);\n  }\n\n  const nameInputBlurHandler = () => {\n    setenteredNameTouched(true);\n  }\n\n  const emailInputBlurHandler = () => {\n    setenteredEmailTouched(true);\n  }\n\n  let InputClasses =  nameInputIsInvalid ? 'form-control invalid': 'form-control'\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={InputClasses}>\n          <label htmlFor='name'>Your Name</label>\n          <input type='text' id='name' onChange={nameChangehandler} value={enteredName} onBlur={nameInputBlurHandler}/>\n          {nameInputIsInvalid && <div><span className=\"error-text\">Name should not be empty.</span> </div>}\n      </div>\n      <div className={InputClasses}>\n          <label htmlFor='name'>Your Email</label>\n          <input type='email' id='email' value={enteredEmail} onChange={emailChangeHandler} onBlur={emailInputBlurHandler}/>\n          {nameInputIsInvalid && <div><span className=\"error-text\">Email should not be empty.</span> </div>}\n      </div>\n      <div className=\"form-actions\">\n          <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}