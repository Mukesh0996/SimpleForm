{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer, useState } from \"react\";\nconst iniitalInputState = {\n  value: \"\",\n  isToouched: false\n};\n\nconst inputStateReducer = (state, action) => {\n  if (action.type === \"INPUT\") {}\n\n  if (action.type === \"BLUR\") {}\n\n  if (action.type === \"REMOVE\") {}\n\n  return iniitalInputState;\n};\n\nconst useInput = validate => {\n  _s();\n\n  const [inputState, dispathInputValueFn] = useReducer(inputStateReducer, iniitalInputState);\n  const [value, setValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n  const valueIsValid = validate(inputState.value);\n  const hasError = inputState.isToouched && !valueIsValid;\n\n  const valueChangeHandler = event => {\n    setValue(event.target.value);\n  };\n\n  const valueBlurHandler = () => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value,\n    hasError,\n    valueChangeHandler,\n    valueBlurHandler,\n    isValid: valueIsValid,\n    reset\n  };\n};\n\n_s(useInput, \"qvSO1kKRpJt4fVpRiV+dhgVuMnQ=\");\n\nexport default useInput;","map":{"version":3,"sources":["/Users/mukesh-8058/Documents/Maxmillian/frontend/Official/Validation with perfect error/src/Hooks/useInput.js"],"names":["useReducer","useState","iniitalInputState","value","isToouched","inputStateReducer","state","action","type","useInput","validate","inputState","dispathInputValueFn","setValue","isTouched","setIsTouched","valueIsValid","hasError","valueChangeHandler","event","target","valueBlurHandler","reset","isValid"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AAGA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,EADe;AAEtBC,EAAAA,UAAU,EAAE;AAFU,CAA1B;;AAKA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAEzC,MAAGA,MAAM,CAACC,IAAP,KAAgB,OAAnB,EAA4B,CAE3B;;AACD,MAAGD,MAAM,CAACC,IAAP,KAAgB,MAAnB,EAA2B,CAE1B;;AACD,MAAGD,MAAM,CAACC,IAAP,KAAgB,QAAnB,EAA6B,CAE5B;;AACD,SAAON,iBAAP;AACH,CAZD;;AAeA,MAAMO,QAAQ,GAAIC,QAAD,IAAc;AAAA;;AAE3B,QAAM,CAACC,UAAD,EAAaC,mBAAb,IAAoCZ,UAAU,CAACK,iBAAD,EAAoBH,iBAApB,CAApD;AAEA,QAAM,CAACC,KAAD,EAAQU,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMe,YAAY,GAAGN,QAAQ,CAACC,UAAU,CAACR,KAAZ,CAA7B;AACA,QAAMc,QAAQ,GAAIN,UAAU,CAACP,UAAX,IAAyB,CAACY,YAA5C;;AACA,QAAME,kBAAkB,GAAIC,KAAD,IAAW;AAClCN,IAAAA,QAAQ,CAACM,KAAK,CAACC,MAAN,CAAajB,KAAd,CAAR;AAEH,GAHD;;AAIA,QAAMkB,gBAAgB,GAAG,MAAM;AAC3BN,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAFD;;AAGA,QAAMO,KAAK,GAAG,MAAM;AAChBT,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAHD;;AAKA,SAAO;AACHZ,IAAAA,KADG;AAEHc,IAAAA,QAFG;AAGHC,IAAAA,kBAHG;AAIHG,IAAAA,gBAJG;AAKHE,IAAAA,OAAO,EAAEP,YALN;AAMHM,IAAAA;AANG,GAAP;AASH,CA9BD;;GAAMb,Q;;AAgCN,eAAeA,QAAf","sourcesContent":["import { useReducer, useState } from \"react\";\n\n\nconst iniitalInputState = {\n    value: \"\",\n    isToouched: false\n}\n\nconst inputStateReducer = (state, action) => {\n\n    if(action.type === \"INPUT\") {\n\n    }\n    if(action.type === \"BLUR\") {\n\n    }\n    if(action.type === \"REMOVE\") {\n\n    }\n    return iniitalInputState;\n}\n\n\nconst useInput = (validate) => {\n\n    const [inputState, dispathInputValueFn] = useReducer(inputStateReducer, iniitalInputState)\n\n    const [value, setValue] = useState(\"\");\n    const [isTouched, setIsTouched] = useState(false);\n    \n    const valueIsValid = validate(inputState.value);\n    const hasError =  inputState.isToouched && !valueIsValid;\n    const valueChangeHandler = (event) => {\n        setValue(event.target.value);\n      \n    }\n    const valueBlurHandler = () => {\n        setIsTouched(true)\n    }\n    const reset = () => {\n        setValue(\"\");\n        setIsTouched(false);\n    }\n\n    return {\n        value,\n        hasError,\n        valueChangeHandler,\n        valueBlurHandler,\n        isValid: valueIsValid,\n        reset\n    }\n\n}\n\nexport default useInput;"]},"metadata":{},"sourceType":"module"}