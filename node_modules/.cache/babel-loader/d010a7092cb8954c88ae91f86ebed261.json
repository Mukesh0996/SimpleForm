{"ast":null,"code":"var _jsxFileName = \"/Users/mukesh-8058/Desktop/01-starting-project 3/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport useInput from \"../Hooks/useInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = () => {\n  _s();\n\n  const {\n    value: enteredName,\n    isValid: nameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangehandler,\n    valueBlurHandler: nameBlurHandler\n  } = useInput(name => name.trim() !== '');\n  const [enteredNameTouched, setenteredNameTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setenteredEmailTouched] = useState(false);\n  const enteredEmailisValid = enteredEmail.includes('@') && enteredEmail.trim() !== '';\n  const emailInputIsInvalid = !enteredEmailisValid && enteredEmailTouched;\n  let formIsValid = false;\n\n  if (enteredNameisValid && enteredEmailisValid) {\n    formIsValid = true;\n  }\n\n  const emailChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    setenteredNameTouched(true);\n\n    if (!enteredNameisValid) {\n      return;\n    }\n\n    setEnteredName('');\n    setenteredNameTouched(false);\n    setEnteredEmail('');\n    setenteredEmailTouched(false);\n  };\n\n  const emailInputBlurHandler = () => {\n    setenteredEmailTouched(true);\n  };\n\n  let nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  let emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangehandler,\n        value: enteredName,\n        onBlur: nameBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-text\",\n          children: \"Name should not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 38\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: enteredEmail,\n        onChange: emailChangeHandler,\n        onBlur: emailInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-text\",\n          children: \"Please enter a valid email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 40\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"tQrqkn75IuaTJ4mELw7qSiA+egA=\", false, function () {\n  return [useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/01-starting-project 3/src/components/SimpleInput.js"],"names":["useState","useInput","SimpleInput","value","enteredName","isValid","nameIsValid","hasError","nameInputHasError","valueChangeHandler","nameChangehandler","valueBlurHandler","nameBlurHandler","name","trim","enteredNameTouched","setenteredNameTouched","enteredEmail","setEnteredEmail","enteredEmailTouched","setenteredEmailTouched","enteredEmailisValid","includes","emailInputIsInvalid","formIsValid","enteredNameisValid","emailChangeHandler","event","target","submitHandler","preventDefault","setEnteredName","emailInputBlurHandler","nameInputClasses","nameInputIsInvalid","emailInputClasses"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport useInput from \"../Hooks/useInput\";\n\nconst SimpleInput = () => {\n\n  const { value: enteredName, isValid: nameIsValid , hasError: nameInputHasError, valueChangeHandler: nameChangehandler, valueBlurHandler: nameBlurHandler } = useInput(name => name.trim() !== '');\n\n  const [enteredNameTouched, setenteredNameTouched] = useState(false);\n\n\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setenteredEmailTouched] = useState(false);\n\n  const enteredEmailisValid = enteredEmail.includes('@') && enteredEmail.trim()  !== '';\n  const emailInputIsInvalid = !enteredEmailisValid && enteredEmailTouched;\n\n  let formIsValid = false;\n  if(enteredNameisValid && enteredEmailisValid) {\n    formIsValid = true;\n  }\n\n  const emailChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    setenteredNameTouched(true);\n    if(!enteredNameisValid) {\n      return;\n    }\n    setEnteredName('');\n    setenteredNameTouched(false);\n\n    setEnteredEmail('');\n    setenteredEmailTouched(false);\n  }\n\n\n  const emailInputBlurHandler = () => {\n    setenteredEmailTouched(true);\n  }\n\n  let nameInputClasses =  nameInputIsInvalid ? 'form-control invalid': 'form-control';\n  let emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control';\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={nameInputClasses}>\n          <label htmlFor='name'>Your Name</label>\n          <input type='text' id='name' onChange={nameChangehandler} value={enteredName} onBlur={nameBlurHandler}/>\n          {nameInputHasError && <div><span className=\"error-text\">Name should not be empty.</span> </div>}\n      </div>\n      <div className={emailInputClasses}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' value={enteredEmail} onChange={emailChangeHandler} onBlur={emailInputBlurHandler}/>\n          {emailInputIsInvalid && <div><span className=\"error-text\">Please enter a valid email</span> </div>}\n      </div>\n      <div className=\"form-actions\">\n          <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}