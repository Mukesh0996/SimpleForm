{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer, useState } from \"react\";\nconst iniitalInputState = {\n  value: \"\",\n  isTouched: false\n};\n\nconst inputStateReducer = (state, action) => {\n  if (action.type === \"INPUT\") {\n    return {\n      value: action.value,\n      isTouched: state.isTouched\n    };\n  }\n\n  if (action.type === \"BLUR\") {\n    return {\n      value: state.value,\n      isTouched\n    };\n  }\n\n  if (action.type === \"REMOVE\") {}\n\n  return iniitalInputState;\n};\n\nconst useInput = validate => {\n  _s();\n\n  const [inputState, dispathInputValueFn] = useReducer(inputStateReducer, iniitalInputState);\n  const valueIsValid = validate(inputState.value);\n  const hasError = inputState.isToouched && !valueIsValid;\n\n  const valueChangeHandler = event => {\n    dispathInputValueFn({\n      type: \"INPUT\",\n      value: event.target.value\n    });\n  };\n\n  const valueBlurHandler = () => {\n    dispathInputValueFn({\n      type: \"BLUR\"\n    });\n  };\n\n  const reset = () => {};\n\n  return {\n    value: inputState.value,\n    hasError,\n    valueChangeHandler,\n    valueBlurHandler,\n    isValid: valueIsValid,\n    reset\n  };\n};\n\n_s(useInput, \"7iIgiUi4LqYre/wE3r9F+u4t9XI=\");\n\nexport default useInput;","map":{"version":3,"sources":["/Users/mukesh-8058/Documents/Maxmillian/frontend/Official/Validation with perfect error/src/Hooks/useInput.js"],"names":["useReducer","useState","iniitalInputState","value","isTouched","inputStateReducer","state","action","type","useInput","validate","inputState","dispathInputValueFn","valueIsValid","hasError","isToouched","valueChangeHandler","event","target","valueBlurHandler","reset","isValid"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AAGA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,EADe;AAEtBC,EAAAA,SAAS,EAAE;AAFW,CAA1B;;AAKA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAEzC,MAAGA,MAAM,CAACC,IAAP,KAAgB,OAAnB,EAA4B;AACxB,WAAO;AACHL,MAAAA,KAAK,EAAEI,MAAM,CAACJ,KADX;AACkBC,MAAAA,SAAS,EAAEE,KAAK,CAACF;AADnC,KAAP;AAIH;;AACD,MAAGG,MAAM,CAACC,IAAP,KAAgB,MAAnB,EAA2B;AACvB,WAAO;AACHL,MAAAA,KAAK,EAAEG,KAAK,CAACH,KADV;AACiBC,MAAAA;AADjB,KAAP;AAKH;;AACD,MAAGG,MAAM,CAACC,IAAP,KAAgB,QAAnB,EAA6B,CAE5B;;AACD,SAAON,iBAAP;AACH,CAnBD;;AAsBA,MAAMO,QAAQ,GAAIC,QAAD,IAAc;AAAA;;AAE3B,QAAM,CAACC,UAAD,EAAaC,mBAAb,IAAoCZ,UAAU,CAACK,iBAAD,EAAoBH,iBAApB,CAApD;AAEA,QAAMW,YAAY,GAAGH,QAAQ,CAACC,UAAU,CAACR,KAAZ,CAA7B;AACA,QAAMW,QAAQ,GAAIH,UAAU,CAACI,UAAX,IAAyB,CAACF,YAA5C;;AACA,QAAMG,kBAAkB,GAAIC,KAAD,IAAW;AACpCL,IAAAA,mBAAmB,CAAC;AAACJ,MAAAA,IAAI,EAAE,OAAP;AAAgBL,MAAAA,KAAK,EAAEc,KAAK,CAACC,MAAN,CAAaf;AAApC,KAAD,CAAnB;AAED,GAHD;;AAIA,QAAMgB,gBAAgB,GAAG,MAAM;AAC3BP,IAAAA,mBAAmB,CAAC;AAACJ,MAAAA,IAAI,EAAC;AAAN,KAAD,CAAnB;AAEH,GAHD;;AAIA,QAAMY,KAAK,GAAG,MAAM,CAEnB,CAFD;;AAIA,SAAO;AACHjB,IAAAA,KAAK,EAAEQ,UAAU,CAACR,KADf;AAEHW,IAAAA,QAFG;AAGHE,IAAAA,kBAHG;AAIHG,IAAAA,gBAJG;AAKHE,IAAAA,OAAO,EAAER,YALN;AAMHO,IAAAA;AANG,GAAP;AASH,CA3BD;;GAAMX,Q;;AA6BN,eAAeA,QAAf","sourcesContent":["import { useReducer, useState } from \"react\";\n\n\nconst iniitalInputState = {\n    value: \"\",\n    isTouched: false\n}\n\nconst inputStateReducer = (state, action) => {\n\n    if(action.type === \"INPUT\") {\n        return {\n            value: action.value, isTouched: state.isTouched\n        }\n\n    }\n    if(action.type === \"BLUR\") {\n        return {\n            value: state.value, isTouched\n        }\n\n\n    }\n    if(action.type === \"REMOVE\") {\n\n    }\n    return iniitalInputState;\n}\n\n\nconst useInput = (validate) => {\n\n    const [inputState, dispathInputValueFn] = useReducer(inputStateReducer, iniitalInputState)\n    \n    const valueIsValid = validate(inputState.value);\n    const hasError =  inputState.isToouched && !valueIsValid;\n    const valueChangeHandler = (event) => {\n      dispathInputValueFn({type: \"INPUT\", value: event.target.value})\n      \n    }\n    const valueBlurHandler = () => {\n        dispathInputValueFn({type:\"BLUR\"})\n       \n    }\n    const reset = () => {\n     \n    }\n\n    return {\n        value: inputState.value,\n        hasError,\n        valueChangeHandler,\n        valueBlurHandler,\n        isValid: valueIsValid,\n        reset\n    }\n\n}\n\nexport default useInput;"]},"metadata":{},"sourceType":"module"}