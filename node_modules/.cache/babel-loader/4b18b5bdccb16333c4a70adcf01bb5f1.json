{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useInput = validate => {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n  const [inputs, setInputs] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\"\n  });\n  const valueIsValid = validate(value);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = event => {\n    event.persist();\n    setValue(event.target.value);\n    console.log({\n      [event.target.name]: event.target.value\n    });\n    console.log(inputs);\n  };\n\n  const valueBlurHandler = () => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value,\n    hasError,\n    valueChangeHandler,\n    valueBlurHandler,\n    isValid: valueIsValid,\n    reset\n  };\n};\n\n_s(useInput, \"hbB22HcIxoOFuv1pzTYYD2VPNFY=\");\n\nexport default useInput;","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/01-starting-project 3/src/Hooks/useInput.js"],"names":["useState","useInput","validate","value","setValue","isTouched","setIsTouched","inputs","setInputs","firstName","lastName","email","valueIsValid","hasError","valueChangeHandler","event","persist","target","console","log","name","valueBlurHandler","reset","isValid"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,QAAQ,GAAIC,QAAD,IAAc;AAAA;;AAE3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,MAAD,EAAQC,SAAR,IAAqBR,QAAQ,CAAC;AAACS,IAAAA,SAAS,EAAC,EAAX;AAAeC,IAAAA,QAAQ,EAAC,EAAxB;AAA4BC,IAAAA,KAAK,EAAC;AAAlC,GAAD,CAAnC;AAEA,QAAMC,YAAY,GAAGV,QAAQ,CAACC,KAAD,CAA7B;AACA,QAAMU,QAAQ,GAAG,CAACD,YAAD,IAAiBP,SAAlC;;AAGA,QAAMS,kBAAkB,GAAIC,KAAD,IAAW;AAClCA,IAAAA,KAAK,CAACC,OAAN;AACAZ,IAAAA,QAAQ,CAACW,KAAK,CAACE,MAAN,CAAad,KAAd,CAAR;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAC,OAACJ,KAAK,CAACE,MAAN,CAAaG,IAAd,GAAqBL,KAAK,CAACE,MAAN,CAAad;AAAnC,KAAZ;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;AACH,GALD;;AAMA,QAAMc,gBAAgB,GAAG,MAAM;AAC3Bf,IAAAA,YAAY,CAAE,IAAF,CAAZ;AACH,GAFD;;AAGA,QAAMgB,KAAK,GAAG,MAAM;AAChBlB,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAHD;;AAKA,SAAO;AACHH,IAAAA,KADG;AAEHU,IAAAA,QAFG;AAGHC,IAAAA,kBAHG;AAIHO,IAAAA,gBAJG;AAKHE,IAAAA,OAAO,EAAEX,YALN;AAMHU,IAAAA;AANG,GAAP;AASH,CAjCD;;GAAMrB,Q;;AAmCN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\n\nconst useInput = (validate) => {\n\n    const [value, setValue] = useState(\"\");\n    const [isTouched, setIsTouched] = useState(false);\n    const [inputs,setInputs] = useState({firstName:\"\", lastName:\"\", email:\"\"});\n\n    const valueIsValid = validate(value);\n    const hasError = !valueIsValid && isTouched;\n\n\n    const valueChangeHandler = (event) => {\n        event.persist();\n        setValue(event.target.value);\n        console.log({[event.target.name]: event.target.value})\n        console.log(inputs);\n    }\n    const valueBlurHandler = () => {\n        setIsTouched((true))\n    }\n    const reset = () => {\n        setValue(\"\");\n        setIsTouched(false);\n    }\n\n    return {\n        value,\n        hasError,\n        valueChangeHandler,\n        valueBlurHandler,\n        isValid: valueIsValid,\n        reset\n    }\n\n}\n\nexport default useInput;"]},"metadata":{},"sourceType":"module"}