{"ast":null,"code":"var _jsxFileName = \"/Users/mukesh-8058/Desktop/01-starting-project 3/src/components/BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = () => {\n  _s();\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [fNameBlur, setFnameBlur] = useState(false);\n  const [lastName, setLastName] = useState(\"\");\n  const [lNameBlur, setlnameBlur] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [emailBlur, setEmailBlur] = useState(false);\n  const firstNameIsValid = firstName.trim() !== '';\n  const firstnameInputIsInValid = !firstNameIsValid && fNameBlur;\n  const lastNameIsValid = lastName.trim() !== '';\n  const lnameInputIsInvalid = !lastNameIsValid && lNameBlur;\n  const emailIsValid = email.trim() !== '' && email.includes('@');\n  const emailInputIsInvalid = !emailIsValid && emailBlur;\n  let formIsValid = false;\n\n  if (firstnameInputIsInValid && lnameInputIsInvalid && emailInputIsInvalid) {\n    formIsValid = true;\n  }\n\n  let nameInputClass = firstnameInputIsInValid ? 'form-control invalid' : 'form-control';\n  let lnameInputClass = lnameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  let emailInputClass = emailInputIsInvalid ? 'form-control invalid' : 'form-control';\n\n  const fNameHandler = event => {\n    setFirstName(event.target.value);\n  };\n\n  const fNameBlurhandler = () => {\n    setFnameBlur(true);\n  };\n\n  const lNameHandler = event => {\n    setLastName(event.target.value);\n  };\n\n  const lNameBlurhandler = () => {\n    setlnameBlur(true);\n  };\n\n  const emailHandler = event => {\n    setEmail(event.target.value);\n  };\n\n  const emailBlurHandler = () => {\n    setEmailBlur(true);\n  };\n\n  const submitHandler = event => {\n    setEmailBlur(true);\n    setlnameBlur(true);\n    setFnameBlur(true);\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: nameInputClass,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: firstName,\n          onChange: fNameHandler,\n          onBlur: fNameBlurhandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), firstnameInputIsInValid && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-text\",\n            children: \"First Name Should Not Be Empty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 45\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: lastName,\n          onChange: lNameHandler,\n          onBlur: lNameBlurhandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), lnameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-text\",\n            children: \"Last Name Should Not Be Empty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 41\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: email,\n        onChange: emailHandler,\n        onBlur: emailBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-text\",\n          children: \"Please Enter A Valid Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 39\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"BaqjkRTY/ly+LFEp7noHBKkR70s=\");\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/01-starting-project 3/src/components/BasicForm.js"],"names":["useState","BasicForm","firstName","setFirstName","fNameBlur","setFnameBlur","lastName","setLastName","lNameBlur","setlnameBlur","email","setEmail","emailBlur","setEmailBlur","firstNameIsValid","trim","firstnameInputIsInValid","lastNameIsValid","lnameInputIsInvalid","emailIsValid","includes","emailInputIsInvalid","formIsValid","nameInputClass","lnameInputClass","emailInputClass","fNameHandler","event","target","value","fNameBlurhandler","lNameHandler","lNameBlurhandler","emailHandler","emailBlurHandler","submitHandler","preventDefault"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\nconst BasicForm = () => {\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [fNameBlur, setFnameBlur] = useState(false);\n\n  const [lastName, setLastName] = useState(\"\");\n  const [lNameBlur, setlnameBlur] = useState(false);\n\n  const [email,setEmail] = useState(\"\");\n  const [emailBlur, setEmailBlur] = useState(false);\n\n  const firstNameIsValid = firstName.trim() !== '';\n  const firstnameInputIsInValid = !firstNameIsValid && fNameBlur;\n\n  const lastNameIsValid = lastName.trim() !== '';\n  const lnameInputIsInvalid = !lastNameIsValid && lNameBlur;\n\n  const emailIsValid = email.trim() !== '' && email.includes('@');\n  const emailInputIsInvalid = !emailIsValid && emailBlur;\n\n  let formIsValid = false;\n  if(firstnameInputIsInValid && lnameInputIsInvalid && emailInputIsInvalid) {\n    formIsValid = true;\n  }\n\n  let nameInputClass = firstnameInputIsInValid ? 'form-control invalid'  : 'form-control';\n  let lnameInputClass = lnameInputIsInvalid ? 'form-control invalid'  : 'form-control'\n  let emailInputClass = emailInputIsInvalid ? 'form-control invalid'  : 'form-control'\n\n  const fNameHandler = (event) => {\n    setFirstName(event.target.value);\n  }\n\n  const fNameBlurhandler = () => {\n    setFnameBlur(true);\n  }\n  \n  const lNameHandler = (event) => {\n    setLastName(event.target.value);\n  }\n\n  const lNameBlurhandler = () =>{\n    setlnameBlur(true);\n  }\n\n  const emailHandler = (event) => {\n    setEmail(event.target.value);\n    \n  }\n\n  const emailBlurHandler = () => {\n    setEmailBlur(true);\n\n  }\n\n  const submitHandler = (event) => {\n    setEmailBlur(true);\n    setlnameBlur(true);\n    setFnameBlur(true);\n    event.preventDefault();\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className='control-group'>\n        <div className={nameInputClass}>\n          <label htmlFor='name'>First Name</label>\n          <input type='text' id='name' value={firstName} onChange={fNameHandler} onBlur={fNameBlurhandler}/>\n          {firstnameInputIsInValid && <div> <span className=\"error-text\">First Name Should Not Be Empty</span> </div>}\n        </div>\n        <div className='form-control'>\n          <label htmlFor='name'>Last Name</label>\n          <input type='text' id='name' value={lastName} onChange={lNameHandler} onBlur={lNameBlurhandler}/>\n          {lnameInputIsInvalid && <div> <span className=\"error-text\">Last Name Should Not Be Empty</span> </div>}\n        </div>\n      </div>\n      <div className='form-control'>\n        <label htmlFor='name'>E-Mail Address</label>\n        <input type='text' id='name' value={email} onChange={emailHandler} onBlur={emailBlurHandler}/>\n        {emailInputIsInvalid && <div> <span className=\"error-text\">Please Enter A Valid Email</span> </div>}\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}