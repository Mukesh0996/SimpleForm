{"ast":null,"code":"var _jsxFileName = \"/Users/mukesh-8058/Desktop/01-starting-project 3/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameisValid, setEnteredNameisValid] = useState(false);\n  const [enteredNameTouched, setenteredNameTouched] = useState(false);\n\n  const nameChangehandler = event => {\n    setEnteredName(event.target.value);\n\n    if (event.target.value.trim().length !== 0) {\n      setEnteredNameisValid(true);\n    }\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    setenteredNameTouched(true);\n\n    if (enteredName.trim() === '') {\n      setEnteredNameisValid(false);\n      return;\n    }\n\n    setEnteredNameisValid(true);\n  };\n\n  const nameInputBlurHandler = event => {\n    setenteredNameTouched(true);\n\n    if (enteredName.trim() === '') {\n      setEnteredNameisValid(false);\n    }\n  };\n\n  const nameInputIsInvalid = !enteredNameisValid && enteredNameTouched;\n  let nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangehandler,\n        value: enteredName,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name should not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"HyL01uU77dWUyrqp9XVG1ZF3YYA=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/01-starting-project 3/src/components/SimpleInput.js"],"names":["useEffect","useState","SimpleInput","props","enteredName","setEnteredName","enteredNameisValid","setEnteredNameisValid","enteredNameTouched","setenteredNameTouched","nameChangehandler","event","target","value","trim","length","submitHandler","preventDefault","nameInputBlurHandler","nameInputIsInvalid","nameInputClasses"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAE7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACK,kBAAD,EAAqBC,qBAArB,IAA8CN,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACO,kBAAD,EAAqBC,qBAArB,IAA8CR,QAAQ,CAAC,KAAD,CAA5D;;AAEA,QAAMS,iBAAiB,GAAIC,KAAD,IAAW;AACnCN,IAAAA,cAAc,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;;AAEA,QAAGF,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,IAAnB,GAA0BC,MAA1B,KAAqC,CAAxC,EAA4C;AAC1CR,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD;AACF,GAND;;AAQA,QAAMS,aAAa,GAAIL,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACM,cAAN;AACAR,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AACA,QAAGL,WAAW,CAACU,IAAZ,OAAsB,EAAzB,EAA6B;AAC3BP,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACA;AACD;;AACDA,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,GARD;;AAUA,QAAMW,oBAAoB,GAAIP,KAAD,IAAW;AACtCF,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AACA,QAAGL,WAAW,CAACU,IAAZ,OAAsB,EAAzB,EAA6B;AAC3BP,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD;AACF,GALD;;AAOA,QAAMY,kBAAkB,GAAG,CAACb,kBAAD,IAAuBE,kBAAlD;AACA,MAAIY,gBAAgB,GAAID,kBAAkB,GAAG,sBAAH,GAA2B,cAArE;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEH,aAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEI,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,QAAQ,EAAEV,iBAAvC;AAA0D,QAAA,KAAK,EAAEN,WAAjE;AAA8E,QAAA,MAAM,EAAEc;AAAtF;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGC,kBAAkB,iBAAI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHzB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA9CD;;GAAMjB,W;;KAAAA,W;AAgDN,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst SimpleInput = (props) => {\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameisValid, setEnteredNameisValid] = useState(false); \n  const [enteredNameTouched, setenteredNameTouched] = useState(false); \n\n  const nameChangehandler = (event) => {\n    setEnteredName(event.target.value)\n\n    if(event.target.value.trim().length !== 0 ) {\n      setEnteredNameisValid(true);\n    }\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    setenteredNameTouched(true);\n    if(enteredName.trim() ==='') {\n      setEnteredNameisValid(false);\n      return;\n    }\n    setEnteredNameisValid(true);\n  }\n\n  const nameInputBlurHandler = (event) => {\n    setenteredNameTouched(true);\n    if(enteredName.trim() ==='') {\n      setEnteredNameisValid(false);\n    }\n  }\n\n  const nameInputIsInvalid = !enteredNameisValid && enteredNameTouched;\n  let nameInputClasses =  nameInputIsInvalid ? 'form-control invalid': 'form-control'\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' onChange={nameChangehandler} value={enteredName} onBlur={nameInputBlurHandler}/>\n        {nameInputIsInvalid && <p className=\"error-text\">Name should not be empty.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}