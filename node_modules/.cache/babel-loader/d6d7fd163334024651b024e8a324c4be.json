{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useInput = validate => {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n  const [inputs, setInputs] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\"\n  });\n  const valueIsValid = validate(value);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = event => {\n    event.persist();\n    setValue(inputs => ({ ...inputs,\n      [event.target.name]: event.target.value\n    }));\n    console.log(value);\n  };\n\n  const valueBlurHandler = () => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value,\n    hasError,\n    valueChangeHandler,\n    valueBlurHandler,\n    isValid: valueIsValid,\n    reset\n  };\n};\n\n_s(useInput, \"mdBTdabrYnxod42ZA63tiPI9f3c=\");\n\nexport default useInput;","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/01-starting-project 3/src/Hooks/useInput.js"],"names":["useState","useInput","validate","value","setValue","isTouched","setIsTouched","inputs","setInputs","firstName","lastName","email","valueIsValid","hasError","valueChangeHandler","event","persist","target","name","console","log","valueBlurHandler","reset","isValid"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,QAAQ,GAAIC,QAAD,IAAc;AAAA;;AAE3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC;AAACS,IAAAA,SAAS,EAAE,EAAZ;AAAgBC,IAAAA,QAAQ,EAAE,EAA1B;AAA8BC,IAAAA,KAAK,EAAC;AAApC,GAAD,CAApC;AAEA,QAAMC,YAAY,GAAGV,QAAQ,CAACC,KAAD,CAA7B;AACA,QAAMU,QAAQ,GAAG,CAACD,YAAD,IAAiBP,SAAlC;;AAGA,QAAMS,kBAAkB,GAAIC,KAAD,IAAW;AAClCA,IAAAA,KAAK,CAACC,OAAN;AACAZ,IAAAA,QAAQ,CAACG,MAAM,KAAK,EAAC,GAAGA,MAAJ;AAAY,OAACQ,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAad;AAA9C,KAAL,CAAP,CAAR;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;AACH,GAJD;;AAKA,QAAMkB,gBAAgB,GAAG,MAAM;AAC3Bf,IAAAA,YAAY,CAAE,IAAF,CAAZ;AACH,GAFD;;AAGA,QAAMgB,KAAK,GAAG,MAAM;AAChBlB,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAHD;;AAKA,SAAO;AACHH,IAAAA,KADG;AAEHU,IAAAA,QAFG;AAGHC,IAAAA,kBAHG;AAIHO,IAAAA,gBAJG;AAKHE,IAAAA,OAAO,EAAEX,YALN;AAMHU,IAAAA;AANG,GAAP;AASH,CAhCD;;GAAMrB,Q;;AAkCN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\n\nconst useInput = (validate) => {\n\n    const [value, setValue] = useState(\"\");\n    const [isTouched, setIsTouched] = useState(false);\n    const [inputs, setInputs] = useState({firstName: \"\", lastName: \"\", email:\"\"})\n\n    const valueIsValid = validate(value);\n    const hasError = !valueIsValid && isTouched;\n\n\n    const valueChangeHandler = (event) => {\n        event.persist();\n        setValue(inputs => ({...inputs, [event.target.name]: event.target.value}));\n        console.log(value);\n    }\n    const valueBlurHandler = () => {\n        setIsTouched((true))\n    }\n    const reset = () => {\n        setValue(\"\");\n        setIsTouched(false);\n    }\n\n    return {\n        value,\n        hasError,\n        valueChangeHandler,\n        valueBlurHandler,\n        isValid: valueIsValid,\n        reset\n    }\n\n}\n\nexport default useInput;"]},"metadata":{},"sourceType":"module"}