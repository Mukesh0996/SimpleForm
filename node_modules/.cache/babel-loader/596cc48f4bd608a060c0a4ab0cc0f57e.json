{"ast":null,"code":"var _jsxFileName = \"/Users/mukesh-8058/Desktop/01-starting-project 3/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport useInput from \"../Hooks/useInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = () => {\n  _s();\n\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangehandler,\n    valueBlurHandler: nameBlurHandler,\n    reset: nameReset\n  } = useInput(name => name.trim() !== '');\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputhasError,\n    valueChangeHandler: emailChangehandler,\n    valueBlurHandler: emailBlurHandler,\n    reset: emailReset\n  } = useInput(email => email.trim() !== '' && email.includes('@'));\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    nameReset();\n    emailReset();\n  };\n\n  let nameInputClasses = nameInputHasError ? 'form-control invalid' : 'form-control';\n  let emailInputClasses = emailInputhasError ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangehandler,\n        value: enteredName,\n        onBlur: nameBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-text\",\n          children: \"Name should not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 38\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: enteredEmail,\n        onChange: emailChangehandler,\n        onBlur: emailBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), emailInputhasError && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-text\",\n          children: \"Please enter a valid email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 39\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"ElNIk0c7T2qvqFRhjwyI8oPbPmg=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/01-starting-project 3/src/components/SimpleInput.js"],"names":["useInput","SimpleInput","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputHasError","valueChangeHandler","nameChangehandler","valueBlurHandler","nameBlurHandler","reset","nameReset","name","trim","enteredEmail","enteredEmailIsValid","emailInputhasError","emailChangehandler","emailBlurHandler","emailReset","email","includes","formIsValid","submitHandler","event","preventDefault","nameInputClasses","emailInputClasses"],"mappings":"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","sourcesContent":["import useInput from \"../Hooks/useInput\";\n\nconst SimpleInput = () => {\n\n  const { value: enteredName, \n    isValid: enteredNameIsValid , \n    hasError: nameInputHasError, \n    valueChangeHandler: nameChangehandler, \n    valueBlurHandler: nameBlurHandler, \n    reset: nameReset } = useInput(name => name.trim() !== '');\n\n  const { value: enteredEmail, \n    isValid: enteredEmailIsValid, \n    hasError: emailInputhasError, \n    valueChangeHandler: emailChangehandler, \n    valueBlurHandler: emailBlurHandler, \n    reset: emailReset } = useInput(email => email.trim() !== '' && email.includes('@'));\n\n  let formIsValid = false;\n  if(enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if(!enteredNameIsValid) {\n      return;\n    }\n    nameReset();\n    emailReset();\n  }\n\n\n  let nameInputClasses =  nameInputHasError ? 'form-control invalid': 'form-control';\n  let emailInputClasses = emailInputhasError ? 'form-control invalid' : 'form-control';\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={nameInputClasses}>\n          <label htmlFor='name'>Your Name</label>\n          <input type='text' id='name' onChange={nameChangehandler} value={enteredName} onBlur={nameBlurHandler}/>\n          {nameInputHasError && <div><span className=\"error-text\">Name should not be empty.</span> </div>}\n      </div>\n      <div className={emailInputClasses}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' value={enteredEmail} onChange={emailChangehandler} onBlur={emailBlurHandler}/>\n          {emailInputhasError && <div><span className=\"error-text\">Please enter a valid email</span> </div>}\n      </div>\n      <div className=\"form-actions\">\n          <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}