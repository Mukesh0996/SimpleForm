{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useInput = validate => {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n  const valueIsValid = validate(value);\n  const hasError = !isTouched && valueIsValid;\n  console.log(hasError);\n  console.log(\"is touched\", isTouched);\n\n  const valueChangeHandler = event => {\n    setValue(event.target.value);\n  };\n\n  const valueBlurHandler = () => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value,\n    hasError,\n    valueChangeHandler,\n    valueBlurHandler,\n    isValid: valueIsValid,\n    reset\n  };\n};\n\n_s(useInput, \"azzR0d/pLm2ya9A1m2K55q4cGzc=\");\n\nexport default useInput;","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/01-starting-project 3/src/Hooks/useInput.js"],"names":["useState","useInput","validate","value","setValue","isTouched","setIsTouched","valueIsValid","hasError","console","log","valueChangeHandler","event","target","valueBlurHandler","reset","isValid"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,QAAQ,GAAIC,QAAD,IAAc;AAAA;;AAE3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMO,YAAY,GAAGL,QAAQ,CAACC,KAAD,CAA7B;AACA,QAAMK,QAAQ,GAAI,CAACH,SAAD,IAAcE,YAAhC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BL,SAA1B;;AACA,QAAMM,kBAAkB,GAAIC,KAAD,IAAW;AAClCR,IAAAA,QAAQ,CAACQ,KAAK,CAACC,MAAN,CAAaV,KAAd,CAAR;AAEH,GAHD;;AAIA,QAAMW,gBAAgB,GAAG,MAAM;AAC3BR,IAAAA,YAAY,CAAE,IAAF,CAAZ;AACH,GAFD;;AAGA,QAAMS,KAAK,GAAG,MAAM;AAChBX,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAHD;;AAKA,SAAO;AACHH,IAAAA,KADG;AAEHK,IAAAA,QAFG;AAGHG,IAAAA,kBAHG;AAIHG,IAAAA,gBAJG;AAKHE,IAAAA,OAAO,EAAET,YALN;AAMHQ,IAAAA;AANG,GAAP;AASH,CA9BD;;GAAMd,Q;;AAgCN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\n\nconst useInput = (validate) => {\n\n    const [value, setValue] = useState(\"\");\n    const [isTouched, setIsTouched] = useState(false);\n    \n    const valueIsValid = validate(value);\n    const hasError =  !isTouched && valueIsValid;\n    console.log(hasError);\n    console.log(\"is touched\", isTouched);\n    const valueChangeHandler = (event) => {\n        setValue(event.target.value);\n      \n    }\n    const valueBlurHandler = () => {\n        setIsTouched((true))\n    }\n    const reset = () => {\n        setValue(\"\");\n        setIsTouched(false);\n    }\n\n    return {\n        value,\n        hasError,\n        valueChangeHandler,\n        valueBlurHandler,\n        isValid: valueIsValid,\n        reset\n    }\n\n}\n\nexport default useInput;"]},"metadata":{},"sourceType":"module"}