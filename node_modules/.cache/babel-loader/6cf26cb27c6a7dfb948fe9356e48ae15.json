{"ast":null,"code":"import useInput from\"../Hooks/useInput\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var BasicForm=function BasicForm(){var _useInput=useInput(function(fName){return fName.trim()!=='';}),fName=_useInput.value,fNameIsValid=_useInput.isValid,fNameBlurhandler=_useInput.valueBlurHandler,fNameHandler=_useInput.valueChangeHandler,fNameError=_useInput.hasError,resetfName=_useInput.reset;var _useInput2=useInput(function(lName){return lName.trim()!=='';}),lName=_useInput2.value,lnameIsValid=_useInput2.isValid,lnameBlurhandler=_useInput2.valueBlurHandler,lnameHandler=_useInput2.valueChangeHandler,lNameError=_useInput2.hasError,resetlName=_useInput2.reset;var _useInput3=useInput(function(email){return email.trim()!==''&&email.includes('@');}),email=_useInput3.value,emailIsValid=_useInput3.isValid,emailHandler=_useInput3.valueChangeHandler,emailBlurhandler=_useInput3.valueBlurHandler,emailError=_useInput3.hasError,emailReset=_useInput3.reset;var formIsValid=false;if(fNameIsValid&&lnameIsValid&&emailIsValid){formIsValid=true;}var nameInputClass=fNameError?'form-control invalid':'form-control';var lnameInputClass=lNameError?'form-control invalid':'form-control';var emailInputClass=emailError?'form-control invalid':'form-control';var submitHandler=function submitHandler(event){event.preventDefault();console.log({firstName:fName,lastName:lName,email:email});resetfName();resetlName();emailReset();};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"control-group\",children:[/*#__PURE__*/_jsxs(\"div\",{className:nameInputClass,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"First Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"firstName\",id:\"name\",value:fName,onChange:fNameHandler,onBlur:fNameBlurhandler}),fNameError&&/*#__PURE__*/_jsx(\"span\",{className:\"error-text\",children:\"First Name Should Not Be Empty\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:lnameInputClass,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"lName\",children:\"Last Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"lastName\",id:\"lName\",value:lName,onChange:lnameHandler,onBlur:lnameBlurhandler}),lNameError&&/*#__PURE__*/_jsxs(\"div\",{children:[\" \",/*#__PURE__*/_jsx(\"span\",{className:\"error-text\",children:\"Last Name Should Not Be Empty\"}),\" \"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:emailInputClass,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"E-Mail Address\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"email\",name:\"email\",value:email,onChange:emailHandler,onBlur:emailBlurhandler}),emailError&&/*#__PURE__*/_jsxs(\"div\",{children:[\" \",/*#__PURE__*/_jsx(\"span\",{className:\"error-text\",children:\"Please Enter A Valid Email\"}),\" \"]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",children:/*#__PURE__*/_jsx(\"button\",{disabled:!formIsValid,children:\"Submit\"})})]});};export default BasicForm;","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/SimpleForm/src/components/BasicForm.js"],"names":["useInput","BasicForm","fName","trim","value","fNameIsValid","isValid","fNameBlurhandler","valueBlurHandler","fNameHandler","valueChangeHandler","fNameError","hasError","resetfName","reset","lName","lnameIsValid","lnameBlurhandler","lnameHandler","lNameError","resetlName","email","includes","emailIsValid","emailHandler","emailBlurhandler","emailError","emailReset","formIsValid","nameInputClass","lnameInputClass","emailInputClass","submitHandler","event","preventDefault","console","log","firstName","lastName"],"mappings":"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","sourcesContent":["import useInput from \"../Hooks/useInput\";\n\nconst BasicForm = () => {\n\n   const {\n     value: fName, \n     isValid: fNameIsValid, \n     valueBlurHandler: fNameBlurhandler, \n     valueChangeHandler: fNameHandler, \n     hasError: fNameError, reset: resetfName \n    } = useInput(fName =>   fName.trim() !== '');\n\n    const {\n      value:lName,\n      isValid: lnameIsValid,\n      valueBlurHandler:lnameBlurhandler,\n      valueChangeHandler: lnameHandler,\n      hasError: lNameError, reset: resetlName \n    } = useInput(lName => lName.trim() !== '');\n\n    const {value: email, isValid: emailIsValid, valueChangeHandler: emailHandler, valueBlurHandler: emailBlurhandler, hasError: emailError, reset: emailReset } = useInput(email => email.trim() !== '' && email.includes('@'));\n\n\n  let formIsValid = false;\n  if(fNameIsValid && lnameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  let nameInputClass = fNameError ? 'form-control invalid'  : 'form-control';\n  let lnameInputClass = lNameError ? 'form-control invalid'  : 'form-control';\n  let emailInputClass = emailError ? 'form-control invalid'  : 'form-control';\n\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    console.log({firstName: fName, lastName: lName, email: email})\n    resetfName();\n    resetlName();\n    emailReset();\n\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className='control-group'>\n        <div className={nameInputClass}>\n          <label htmlFor='name'>First Name</label>\n          <input type='text' name=\"firstName\" id='name' value={fName} onChange={fNameHandler} onBlur={fNameBlurhandler}/>\n          {fNameError && <span className=\"error-text\">First Name Should Not Be Empty</span>}\n        </div>\n        <div className={lnameInputClass}>\n          <label htmlFor='lName'>Last Name</label>\n          <input type='text' name=\"lastName\" id='lName' value={lName} onChange={lnameHandler} onBlur={lnameBlurhandler}/>\n          {lNameError && <div> <span className=\"error-text\">Last Name Should Not Be Empty</span> </div>}\n        </div>\n\n      <div className={emailInputClass}>\n        <label htmlFor='email'>E-Mail Address</label>\n        <input type='text' id='email' name=\"email\" value={email} onChange={emailHandler} onBlur={emailBlurhandler}/>\n        {emailError && <div> <span className=\"error-text\">Please Enter A Valid Email</span> </div>}\n      </div>\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}