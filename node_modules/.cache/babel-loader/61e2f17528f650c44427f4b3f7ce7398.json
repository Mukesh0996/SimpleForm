{"ast":null,"code":"var _jsxFileName = \"/Users/mukesh-8058/Desktop/01-starting-project 3/src/components/BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport useInput from \"../Hooks/useInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = () => {\n  _s();\n\n  const {\n    value: fName,\n    isValid: fNameIsValid,\n    valueBlurHandler: fNameBlurhandler,\n    valueChangeHandler: fNameHandler,\n    hasError: fNameError,\n    reset: resetfName\n  } = useInput(fName => fName.trim() !== '');\n  const {\n    value: lName,\n    isValid: lnameIsValid,\n    valueBlurHandler: lnameBlurhandler,\n    valueChangeHandler: lnameHandler,\n    hasError: lNameError,\n    reset: resetlName\n  } = useInput(lName => lName.trim() !== '');\n  const {\n    value: email,\n    isValid: emailIsValid,\n    valueChangeHandler: emailHandler,\n    valueBlurHandler: emailBlurhandler,\n    hasError: emailError,\n    reset: emailReset\n  } = useInput(email => email.trim() !== '' && email.includes('@'));\n  let formIsValid = false;\n\n  if (fNameIsValid && lnameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  let nameInputClass = fNameError ? 'form-control invalid' : 'form-control';\n  let lnameInputClass = lNameError ? 'form-control invalid' : 'form-control';\n  let emailInputClass = emailError ? 'form-control invalid' : 'form-control';\n  console.log(fNameIsValid, fNameError);\n  console.log(fNameIsValid && fNameError);\n\n  const submitHandler = event => {\n    event.preventDefault();\n    resetfName();\n    resetlName();\n    emailReset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: nameInputClass,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"firstName\",\n          id: \"name\",\n          value: fName,\n          onChange: fNameHandler,\n          onBlur: fNameBlurhandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), fNameError && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-text\",\n            children: \"First Name Should Not Be Empty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 32\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lnameInputClass,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lName\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"lastName\",\n          id: \"lName\",\n          value: lName,\n          onChange: lnameHandler,\n          onBlur: lnameBlurhandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), lNameError && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-text\",\n            children: \"Last Name Should Not Be Empty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 32\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: emailHandler,\n        onBlur: emailBlurhandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), emailError && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-text\",\n          children: \"Please Enter A Valid Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 30\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"kQRpj/ZZ4bq+8Cms7Ty/mJMjCGU=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["/Users/mukesh-8058/Desktop/01-starting-project 3/src/components/BasicForm.js"],"names":["useInput","BasicForm","value","fName","isValid","fNameIsValid","valueBlurHandler","fNameBlurhandler","valueChangeHandler","fNameHandler","hasError","fNameError","reset","resetfName","trim","lName","lnameIsValid","lnameBlurhandler","lnameHandler","lNameError","resetlName","email","emailIsValid","emailHandler","emailBlurhandler","emailError","emailReset","includes","formIsValid","nameInputClass","lnameInputClass","emailInputClass","console","log","submitHandler","event","preventDefault"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,mBAArB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAErB,QAAM;AACJC,IAAAA,KAAK,EAAEC,KADH;AAEJC,IAAAA,OAAO,EAAEC,YAFL;AAGJC,IAAAA,gBAAgB,EAAEC,gBAHd;AAIJC,IAAAA,kBAAkB,EAAEC,YAJhB;AAKJC,IAAAA,QAAQ,EAAEC,UALN;AAKkBC,IAAAA,KAAK,EAAEC;AALzB,MAMDb,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACW,IAAN,OAAiB,EAA3B,CANb;AAQC,QAAM;AACJZ,IAAAA,KAAK,EAACa,KADF;AAEJX,IAAAA,OAAO,EAAEY,YAFL;AAGJV,IAAAA,gBAAgB,EAACW,gBAHb;AAIJT,IAAAA,kBAAkB,EAAEU,YAJhB;AAKJR,IAAAA,QAAQ,EAAES,UALN;AAKkBP,IAAAA,KAAK,EAAEQ;AALzB,MAMFpB,QAAQ,CAACe,KAAK,IAAIA,KAAK,CAACD,IAAN,OAAiB,EAA3B,CANZ;AAQA,QAAM;AAACZ,IAAAA,KAAK,EAAEmB,KAAR;AAAejB,IAAAA,OAAO,EAAEkB,YAAxB;AAAsCd,IAAAA,kBAAkB,EAAEe,YAA1D;AAAwEjB,IAAAA,gBAAgB,EAAEkB,gBAA1F;AAA4Gd,IAAAA,QAAQ,EAAEe,UAAtH;AAAkIb,IAAAA,KAAK,EAAEc;AAAzI,MAAwJ1B,QAAQ,CAACqB,KAAK,IAAIA,KAAK,CAACP,IAAN,OAAiB,EAAjB,IAAuBO,KAAK,CAACM,QAAN,CAAe,GAAf,CAAjC,CAAtK;AAGF,MAAIC,WAAW,GAAG,KAAlB;;AACA,MAAGvB,YAAY,IAAIW,YAAhB,IAAgCM,YAAnC,EAAiD;AAC/CM,IAAAA,WAAW,GAAG,IAAd;AACD;;AAED,MAAIC,cAAc,GAAGlB,UAAU,GAAG,sBAAH,GAA6B,cAA5D;AACA,MAAImB,eAAe,GAAGX,UAAU,GAAG,sBAAH,GAA6B,cAA7D;AACA,MAAIY,eAAe,GAAGN,UAAU,GAAG,sBAAH,GAA6B,cAA7D;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY5B,YAAZ,EAA0BM,UAA1B;AACAqB,EAAAA,OAAO,CAACC,GAAR,CAAY5B,YAAY,IAAIM,UAA5B;;AAEA,QAAMuB,aAAa,GAAIC,KAAD,IAAW;AAE/BA,IAAAA,KAAK,CAACC,cAAN;AACAvB,IAAAA,UAAU;AACVO,IAAAA,UAAU;AACVM,IAAAA,UAAU;AAEX,GAPD;;AASA,sBACE;AAAM,IAAA,QAAQ,EAAEQ,aAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEL,cAAhB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,WAAxB;AAAoC,UAAA,EAAE,EAAC,MAAvC;AAA8C,UAAA,KAAK,EAAE1B,KAArD;AAA4D,UAAA,QAAQ,EAAEM,YAAtE;AAAoF,UAAA,MAAM,EAAEF;AAA5F;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGI,UAAU,iBAAI;AAAA,uCAAM;AAAM,YAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAN;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAEmB,eAAhB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,UAAxB;AAAmC,UAAA,EAAE,EAAC,OAAtC;AAA8C,UAAA,KAAK,EAAEf,KAArD;AAA4D,UAAA,QAAQ,EAAEG,YAAtE;AAAoF,UAAA,MAAM,EAAED;AAA5F;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGE,UAAU,iBAAI;AAAA,uCAAM;AAAM,YAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAN;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAK,MAAA,SAAS,EAAEY,eAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,OAAtB;AAA8B,QAAA,IAAI,EAAC,OAAnC;AAA2C,QAAA,KAAK,EAAEV,KAAlD;AAAyD,QAAA,QAAQ,EAAEE,YAAnE;AAAiF,QAAA,MAAM,EAAEC;AAAzF;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGC,UAAU,iBAAI;AAAA,qCAAM;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAN;AAAA;AAAA;AAAA;AAAA;AAAA,cAHjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAkBE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAQ,QAAA,QAAQ,EAAE,CAACG,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAjED;;GAAM3B,S;UAQED,Q,EAQAA,Q,EAE0JA,Q;;;KAlB5JC,S;AAmEN,eAAeA,SAAf","sourcesContent":["import useInput from \"../Hooks/useInput\";\n\nconst BasicForm = () => {\n\n   const {\n     value: fName, \n     isValid: fNameIsValid, \n     valueBlurHandler: fNameBlurhandler, \n     valueChangeHandler: fNameHandler, \n     hasError: fNameError, reset: resetfName \n    } = useInput(fName => fName.trim() !== '');\n\n    const {\n      value:lName,\n      isValid: lnameIsValid,\n      valueBlurHandler:lnameBlurhandler,\n      valueChangeHandler: lnameHandler,\n      hasError: lNameError, reset: resetlName \n    } = useInput(lName => lName.trim() !== '');\n\n    const {value: email, isValid: emailIsValid, valueChangeHandler: emailHandler, valueBlurHandler: emailBlurhandler, hasError: emailError, reset: emailReset } = useInput(email => email.trim() !== '' && email.includes('@'));\n\n\n  let formIsValid = false;\n  if(fNameIsValid && lnameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  let nameInputClass = fNameError ? 'form-control invalid'  : 'form-control';\n  let lnameInputClass = lNameError ? 'form-control invalid'  : 'form-control';\n  let emailInputClass = emailError ? 'form-control invalid'  : 'form-control';\n  console.log(fNameIsValid ,fNameError);\n  console.log(fNameIsValid && fNameError);\n\n  const submitHandler = (event) => {\n\n    event.preventDefault();\n    resetfName();\n    resetlName();\n    emailReset();\n\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className='control-group'>\n        <div className={nameInputClass}>\n          <label htmlFor='name'>First Name</label>\n          <input type='text' name=\"firstName\" id='name' value={fName} onChange={fNameHandler} onBlur={fNameBlurhandler}/>\n          {fNameError && <div> <span className=\"error-text\">First Name Should Not Be Empty</span> </div>}\n        </div>\n        <div className={lnameInputClass}>\n          <label htmlFor='lName'>Last Name</label>\n          <input type='text' name=\"lastName\" id='lName' value={lName} onChange={lnameHandler} onBlur={lnameBlurhandler}/>\n          {lNameError && <div> <span className=\"error-text\">Last Name Should Not Be Empty</span> </div>}\n        </div>\n      </div>\n      <div className={emailInputClass}>\n        <label htmlFor='email'>E-Mail Address</label>\n        <input type='text' id='email' name=\"email\" value={email} onChange={emailHandler} onBlur={emailBlurhandler}/>\n        {emailError && <div> <span className=\"error-text\">Please Enter A Valid Email</span> </div>}\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}